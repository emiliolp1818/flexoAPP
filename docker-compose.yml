version: '3.8'

services:
  # Base de datos SQL Server optimizada
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: flexoapp-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=FlexoApp2024!
      - MSSQL_PID=Developer
      - MSSQL_MEMORY_LIMIT_MB=2048
      - MSSQL_TCP_PORT=1433
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - sqlserver_logs:/var/opt/mssql/log
      - ./backend/Scripts:/scripts
    networks:
      - flexoapp-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P FlexoApp2024! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis para cach√© distribuido optimizado
  redis:
    image: redis:7-alpine
    container_name: flexoapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - flexoapp-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: flexoapp-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__FlexoBD=Server=sqlserver;Database=flexoBD;User Id=sa;Password=FlexoApp2024!;TrustServerCertificate=true;MultipleActiveResultSets=true;
      - ConnectionStrings__Redis=redis:6379
      - JWT_SECRET_KEY=FlexoAuthSecretKey2024!@#$%^&*()_+SuperSecure
      - Cache__Type=Redis
      - MiniProfiler__Enabled=false
      - ApplicationInsights__InstrumentationKey=${APPINSIGHTS_KEY:-}
    ports:
      - "5000:80"
    depends_on:
      sqlserver:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flexoapp-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./backend/logs:/app/logs

  # Frontend Angular (Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flexoapp-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - flexoapp-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'

  # Load Balancer (Nginx)
  nginx:
    image: nginx:alpine
    container_name: flexoapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - flexoapp-network
    restart: unless-stopped

  # Monitoring con Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: flexoapp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - flexoapp-network
    restart: unless-stopped

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: flexoapp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - flexoapp-network
    restart: unless-stopped

volumes:
  sqlserver_data:
  sqlserver_logs:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  flexoapp-network:
    driver: bridge